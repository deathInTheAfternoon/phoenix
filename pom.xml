<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.thakurn.phoenix</groupId>
  <artifactId>phoenix_experiments</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Phoenix</name>
  <url>http://maven.apache.org</url>
  
  <!-- External repositories to find dependencies not kept on maven central repo e.g. JBoss. -->
  <repositories>
  		<!-- Activiti repo -->
  		<repository>
        	<id>activiti</id>
        	<name>Activiti Repository</name>
        	<url>http://maven.alfresco.com/nexus/content/repositories/activiti/</url>
    	</repository>
    	<!-- Required for Activiti integration with Mule -->
    	<repository>
			<id>muleforge-repo</id>
			<name>MuleForge Repository</name>
			<url>http://repository.muleforge.org/release</url>
			<layout>default</layout>
		</repository>
		<!-- JBoss and Drools repo -->
        <repository>
            <id>jboss</id>
            <name>jboss</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    
	<!-- Component version numbers. Please do not include version numbers in the dependency section - ADD THEM HERE. It saves a lot of grief when upgrading. Please keep in alphabetical order. -->
	<properties>
		<activiti.version>5.8</activiti.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<cglib.ver>2.2.2</cglib.ver>
		<commons-lang.version>2.3</commons-lang.version>
		<dozer.version>5.3.2</dozer.version>
		<drools.version>5.3.0.Final</drools.version>
		<hypersonic.ver>1.2.132</hypersonic.ver>
		<joda.ver>2.0</joda.ver>
		<junit.ver>4.8.1</junit.ver>
		<mybatis.version>3.0.6</mybatis.version>
		<mybatis-spring.version>1.0.2</mybatis-spring.version>
		<mysql-connector.version>5.1.14</mysql-connector.version>
		<mule.version>3.2.1</mule.version>
		<mule-activiti.ver>3.2.0</mule-activiti.ver>
		<openjpa.ver>2.1.1</openjpa.ver>
	    <resteasy.version>2.2.1.GA</resteasy.version>
	    <sl4j-api.ver>1.6.1</sl4j-api.ver>
	    <sl4j-log4j12.ver>1.6.1</sl4j-log4j12.ver>
	    <springframework.ver>3.0.5.RELEASE</springframework.ver>
	</properties>
	
	<!-- Dependices for this project. Please keep in alphabetical order - makes life a lot easier. -->

  <dependencies>

    <!-- dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.8.2</version>
      <scope>test</scope>
    </dependency -->
    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>
    <!-- for testing rest invocation -->
   <dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.1.2</version>
    <scope>compile</scope>
  </dependency>
  <!-- Brings in EntityUtils class used in the test rest invocation class. -->
  <dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpcore</artifactId>
    <version>4.1.4</version>
    <scope>compile</scope>
  </dependency>
	<!-- Activiti Camel Integration -->
	<dependency>
		<groupId>org.activiti</groupId>
		<artifactId>activiti-camel</artifactId>
		<version>5.6</version>
	</dependency>
	<dependency>
		<groupId>org.apache.camel</groupId>
		<artifactId>camel-spring</artifactId>
		<version>2.5.0</version>
	</dependency>
  <!-- Using the Activiti Mule integration -->
  <dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-mule</artifactId>
			<version>${activiti.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-vm</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-file</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-scripting</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-xml</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-jdbc</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-json</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-http</artifactId>
			<version>${mule.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-activiti</artifactId>
			<version>${mule-activiti.ver}</version>
			<exclusions>
				<exclusion>
					<groupId>org.mule</groupId>
					<artifactId>mule-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mule.transports</groupId>
					<artifactId>mule-transport-http</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mule.transports</groupId>
					<artifactId>mule-transport-vm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mule.transports</groupId>
					<artifactId>mule-transport-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mule.modules</groupId>
					<artifactId>mule-module-json</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.activiti</groupId>
					<artifactId>activiti-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.activiti</groupId>
					<artifactId>activiti-spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- END OF ACTIVITI MULE -->
		
  		<!-- Activiti BPM Engine. -->
  		<dependency>
  			<groupId>org.activiti</groupId>
  			<artifactId>activiti-engine</artifactId>
  			<version>${activiti.version}</version>
  		</dependency>
  		<!-- Activiti Spring integration beans -->
  		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		
  		<dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0.version}</version>
        </dependency>
        <dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib.ver}</version>
		</dependency>
  		<!-- Commons-lang (Apache). This is used by the Drools Validation example which was copied, should we replace? -->
  		<dependency>
    		<groupId>commons-lang</groupId>
    		<artifactId>commons-lang</artifactId>
    		<version>${commons-lang.version}</version>
		</dependency>
		<!-- Dozer goes here. -->
		<dependency>
		    <groupId>net.sf.dozer</groupId>
		    <artifactId>dozer</artifactId>
		    <version>${dozer.version}</version>
		</dependency>
		<!-- Drools dependencies -->
  	    <!--  Drools Expert goes here. -->
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-core</artifactId>
            <version>${drools.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-compiler</artifactId>
            <version>${drools.version}</version>
            <type>jar</type>
        </dependency>
        <!-- Drools Spring integration -->
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-spring</artifactId>
            <version>${drools.version}</version>
            <type>jar</type>
            <!-- only required for version 5.2.x. Not sure if required for 5.3?? -->
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-commons-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>ejb3-persistence</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>jta</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- END DROOLS -->

    <!-- Hypersonic is used by Activiti tests that I've copied over. -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${hypersonic.ver}</version>
      <scope>test</scope>
    </dependency>    
  	<!-- JUnit (I prefer TestNG) -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.ver}</version>
    </dependency>
    <!-- JODA Date/Time library. -->
    <dependency>
    	<groupId>joda-time</groupId>
    	<artifactId>joda-time</artifactId>
    	<version>${joda.ver}</version>
	</dependency>
	<!-- MyBatis persistence framework -->
	<dependency>
    	<groupId>org.mybatis</groupId>
    	<artifactId>mybatis</artifactId>
    	<version>${mybatis.version}</version>
	</dependency>
	<!-- MyBatis spring integration -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>${mybatis-spring.version}</version>
	</dependency>
	<!-- MySQL-connector -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>${mysql-connector.version}</version>
	</dependency>
	<!-- OpenJPA is used by Activiti instead of Hibernate because of their concern over licenses. -->
	<dependency>
    	<groupId>org.apache.openjpa</groupId>
		<artifactId>openjpa</artifactId>
        <!-- set the version to be the same as the level in your runtime -->
        <version>${openjpa.ver}</version>
    </dependency>
	<!-- RESTEasy goes here. -->
    <!-- core library -->
    <dependency>
		<groupId>org.jboss.resteasy</groupId>
		<artifactId>resteasy-jaxrs</artifactId>
		<version>${resteasy.version}</version>
	</dependency>
	<!-- Library for Spring integration. -->
	<dependency>
	    <groupId>org.jboss.resteasy</groupId>
	    <artifactId>resteasy-spring</artifactId>
	    <version>${resteasy.version}</version>
	</dependency>
	<!-- END RESTEAsy -->
    <!-- slf4j and log4j should go here -->
    <dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>${sl4j-api.ver}</version>
     </dependency>
     <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${sl4j-log4j12.ver}</version>
     </dependency>
    
    <!-- SPRING dependencies go here. -->
	<!--
	    Core utilities used by other modules.
	    Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-core</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Expression Language (depends on spring-core)
	    Define this if you use Spring Expression APIs (org.springframework.expression.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-expression</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Bean Factory and JavaBeans utilities (depends on spring-core)
	    Define this if you use Spring Bean APIs (org.springframework.beans.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-beans</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
	    Define this if you use Spring AOP APIs (org.springframework.aop.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-aop</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
	    This is the central artifact for Spring's Dependency Injection Container and is generally always defined
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
	    Define this if you need any of these integrations
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context-support</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
	    Define this if you use Spring Transactions or DAO Exception Hierarchy
	    (org.springframework.transaction.*/org.springframework.dao.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-tx</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
	    Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-jdbc</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
	    (depends on spring-core, spring-beans, spring-context, spring-tx)
	    Define this if you need ORM (org.springframework.orm.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-orm</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
	    (depends on spring-core, spring-beans, spring-context)
	    Define this if you need OXM (org.springframework.oxm.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-oxm</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Web application development utilities applicable to both Servlet and Portlet Environments
	    (depends on spring-core, spring-beans, spring-context)
	    Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-web</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
	    Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-webmvc</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
	    Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-webmvc-portlet</artifactId>
	  <version>${springframework.ver}</version>
	</dependency>
	 
	<!--
	    Support for testing Spring applications with tools such as JUnit and TestNG
	    This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-test</artifactId>
	  <version>${springframework.ver}</version>
	  <scope>test</scope>
	</dependency>
     <!-- END Spring -->
  </dependencies>

  <build>
    <finalName>endeavour_member_service</finalName>
    	<pluginManagement>
	      <plugins>
		<!--<plugin>
		  <groupId>org.apache.tomcat.maven</groupId>
		  <artifactId>tomcat6-maven-plugin</artifactId>
		  <version>2.0-SNAPSHOT</version>
		</plugin>-->
		<plugin>
		  <groupId>org.apache.tomcat.maven</groupId>
		  <artifactId>tomcat7-maven-plugin</artifactId>
		  <version>2.0-SNAPSHOT</version>
		</plugin>
	      </plugins>
	 </pluginManagement>
  </build>
</project>
